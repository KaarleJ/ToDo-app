name: Project build

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:

    runs-on: ubuntu-latest

    env:
      VITE_AUTH_DOMAIN: ${{ secrets.AUTH_DOMAIN }}
      VITE_AUTH_ID: ${{ secrets.AUTH_ID }}
      VITE_AUTH_AUDIENCE: ${{ secrets.OKTA_AUDIENCE }}
      VITE_API_URL: ${{ secrets.API_URL }}
      PSQL_URL: ${{ secrets.PSQL_URL }}
      PSQL_UN: ${{ secrets.PSQL_UN }}
      PSQL_PW: ${{ secrets.PSQL_PW }}
      OKTA_ISSUER: ${{ secrets.OKTA_ISSUER }}
      OKTA_AUDIENCE: ${{ secrets.OKTA_AUDIENCE }}

    steps:
    - uses: actions/checkout@v3

    - name: Set up Node 20
      uses: actions/setup-node@v3
      with:
        node-version: '20'

    - name: Build React frontend
      run: |
        cd todo-client
        npm install
        npm run build

    - name: Copy React Build to Spring App static folder
      run: |
        mkdir -p todo-server/src/main/resources/static
        cp -r todo-client/dist/* todo-server/src/main/resources/static/
      
    - name: Set up JDK 21
      uses: actions/setup-java@v3
      with:
        java-version: '21'
        distribution: 'temurin'
        cache: maven

    - name: Build native image with Maven
      run: |
        cd todo-server
        mvn -Pnative spring-boot:build-image

    - name: Tag Docker Image
      run: docker tag todo-server:latest registry.fly.io/springtodoapp:latest

    - name: Push Docker Image to Fly.io
      run: docker push registry.fly.io/springtodoapp:latest
    
    - name: Set up Fly.io
      uses: superfly/flyctl-actions/setup-flyctl@master

    - name: Deploy to Fly.io
      run: flyctl deploy --image registry.fly.io/springtodoapp:latest
      env:
        FLY_API_TOKEN: ${{ secrets.FLY_API_TOKEN }}


